{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 30,
    "pending": 0,
    "failures": 11,
    "start": "2022-08-05T04:19:39.414Z",
    "end": "2022-08-05T04:20:44.244Z",
    "duration": 64830,
    "testsRegistered": 41,
    "passPercent": 73.17073170731707,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c93ac6b7-e56c-4700-b80e-c578b0304f4d",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "22f8b38b-9ed7-4a86-bdd5-42a8ef51e0aa",
          "title": "1 - Adicione à página o título \"Paleta de Cores\"",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\" Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1638,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "fb130f0e-846c-431c-a8c0-5bbe75ffad2f",
              "parentUUID": "22f8b38b-9ed7-4a86-bdd5-42a8ef51e0aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb130f0e-846c-431c-a8c0-5bbe75ffad2f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1638,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c93cd1e6-667b-4bff-993f-a728e2f71a51",
          "title": "2 - Adicione à página uma paleta contendo quatro cores distintas",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 359,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "0ae107f5-be39-4f26-8912-6a6cccd11f7a",
              "parentUUID": "c93cd1e6-667b-4bff-993f-a728e2f71a51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "93849151-c8e3-49c3-93ea-b21541144029",
              "parentUUID": "c93cd1e6-667b-4bff-993f-a728e2f71a51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "6c38837e-98a5-4561-a4da-4934d302c599",
              "parentUUID": "c93cd1e6-667b-4bff-993f-a728e2f71a51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "bb02fcfe-242f-4bab-8f17-35164b26a0a7",
              "parentUUID": "c93cd1e6-667b-4bff-993f-a728e2f71a51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "bd0fbbe1-5baa-4c8a-b474-61f9129c7525",
              "parentUUID": "c93cd1e6-667b-4bff-993f-a728e2f71a51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "1e4a871b-e109-486b-a521-66a75594782c",
              "parentUUID": "c93cd1e6-667b-4bff-993f-a728e2f71a51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "d7603399-4d9e-429f-9e53-1a0620f3c1a1",
              "parentUUID": "c93cd1e6-667b-4bff-993f-a728e2f71a51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ae107f5-be39-4f26-8912-6a6cccd11f7a",
            "93849151-c8e3-49c3-93ea-b21541144029",
            "6c38837e-98a5-4561-a4da-4934d302c599",
            "bb02fcfe-242f-4bab-8f17-35164b26a0a7",
            "bd0fbbe1-5baa-4c8a-b474-61f9129c7525",
            "1e4a871b-e109-486b-a521-66a75594782c",
            "d7603399-4d9e-429f-9e53-1a0620f3c1a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1738,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "57578b31-4b98-443f-91a9-000c0b2ec5d3",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d014a19a-367d-4384-bb03-52c2e1c33a2d",
              "parentUUID": "57578b31-4b98-443f-91a9-000c0b2ec5d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "7c90326f-c2dc-4269-9960-f675bcaed66b",
              "parentUUID": "57578b31-4b98-443f-91a9-000c0b2ec5d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d014a19a-367d-4384-bb03-52c2e1c33a2d",
            "7c90326f-c2dc-4269-9960-f675bcaed66b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 680,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4f2b6c49-6e69-4f6d-8559-d58e84527ce5",
          "title": "4 - Adicione à página um quadro contendo 25 pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "1b1d688d-fff8-4146-adf1-779c52182036",
              "parentUUID": "4f2b6c49-6e69-4f6d-8559-d58e84527ce5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a8af0461-8515-4123-854d-e6b17c76addb",
              "parentUUID": "4f2b6c49-6e69-4f6d-8559-d58e84527ce5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "7916376d-e322-4636-8e55-23c86a0c4484",
              "parentUUID": "4f2b6c49-6e69-4f6d-8559-d58e84527ce5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "7bfffc8e-25ab-4e05-9704-91fa5b487e8d",
              "parentUUID": "4f2b6c49-6e69-4f6d-8559-d58e84527ce5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b1d688d-fff8-4146-adf1-779c52182036",
            "a8af0461-8515-4123-854d-e6b17c76addb",
            "7916376d-e322-4636-8e55-23c86a0c4484",
            "7bfffc8e-25ab-4e05-9704-91fa5b487e8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1021,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "991847ee-0179-4c92-927e-8697c2029ab2",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "536285f0-041e-4918-9855-ac1555b3b93c",
              "parentUUID": "991847ee-0179-4c92-927e-8697c2029ab2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "c38fb575-e261-4699-858e-123b5501956c",
              "parentUUID": "991847ee-0179-4c92-927e-8697c2029ab2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "536285f0-041e-4918-9855-ac1555b3b93c",
            "c38fb575-e261-4699-858e-123b5501956c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1228,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ee4e5ac4-176a-4fc7-ba14-a306109d7c90",
          "title": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a529a3d0-672e-40b8-a661-fd530497e134",
              "parentUUID": "ee4e5ac4-176a-4fc7-ba14-a306109d7c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "fb8403f1-5654-4478-8f64-ceaca8012359",
              "parentUUID": "ee4e5ac4-176a-4fc7-ba14-a306109d7c90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a529a3d0-672e-40b8-a661-fd530497e134",
            "fb8403f1-5654-4478-8f64-ceaca8012359"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 325,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6d783d7d-b495-4d1d-a2d2-9dd78bf687f8",
          "title": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 4704,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying: cy.click() failed because this element:\n\n<li class=\"color selected\"></li>\n\nis being covered by another element:\n\n<input type=\"text\" id=\"board-size\" min=\"0\">\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying: cy.click() failed because this element:\n\n<li class=\"color selected\"></li>\n\nis being covered by another element:\n\n<input type=\"text\" id=\"board-size\" min=\"0\">\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at cypressErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32841/__cypress/runner/cypress_runner.js:149915:3)\n    at Object.retry (http://localhost:32841/__cypress/runner/cypress_runner.js:144197:19)\n    at retryActionability (http://localhost:32841/__cypress/runner/cypress_runner.js:132052:19)\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:32841/__cypress/runner/cypress_runner.js:164690:29)\n    at tryFn (http://localhost:32841/__cypress/runner/cypress_runner.js:144661:21)\n    at whenStable (http://localhost:32841/__cypress/runner/cypress_runner.js:144696:12)\n    at http://localhost:32841/__cypress/runner/cypress_runner.js:144240:16\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32841/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32841/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32841/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32841/__cypress/runner/cypress_runner.js:165532:18)\n    at Promise._fulfill (http://localhost:32841/__cypress/runner/cypress_runner.js:165477:18)",
                "diff": null
              },
              "uuid": "8f79756a-2de3-43fa-9e75-c9aba58a1116",
              "parentUUID": "6d783d7d-b495-4d1d-a2d2-9dd78bf687f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 4828,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying: cy.click() failed because this element:\n\n<li class=\"color selected\"></li>\n\nis being covered by another element:\n\n<input type=\"text\" id=\"board-size\" min=\"0\">\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying: cy.click() failed because this element:\n\n<li class=\"color selected\"></li>\n\nis being covered by another element:\n\n<input type=\"text\" id=\"board-size\" min=\"0\">\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at cypressErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32841/__cypress/runner/cypress_runner.js:149915:3)\n    at Object.retry (http://localhost:32841/__cypress/runner/cypress_runner.js:144197:19)\n    at retryActionability (http://localhost:32841/__cypress/runner/cypress_runner.js:132052:19)\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:32841/__cypress/runner/cypress_runner.js:164690:29)\n    at tryFn (http://localhost:32841/__cypress/runner/cypress_runner.js:144661:21)\n    at whenStable (http://localhost:32841/__cypress/runner/cypress_runner.js:144696:12)\n    at http://localhost:32841/__cypress/runner/cypress_runner.js:144240:16\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32841/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32841/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32841/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32841/__cypress/runner/cypress_runner.js:165532:18)\n    at Promise._fulfill (http://localhost:32841/__cypress/runner/cypress_runner.js:165477:18)",
                "diff": null
              },
              "uuid": "c6b7bcf5-9628-4389-83b4-2dd613009277",
              "parentUUID": "6d783d7d-b495-4d1d-a2d2-9dd78bf687f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8f79756a-2de3-43fa-9e75-c9aba58a1116",
            "c6b7bcf5-9628-4389-83b4-2dd613009277"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9532,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f71cc154-3df7-4a23-a413-d1cf80de899c",
          "title": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2625,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "5356f6e3-8a0b-41de-985a-a6f177242219",
              "parentUUID": "f71cc154-3df7-4a23-a413-d1cf80de899c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 4765,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying: cy.click() failed because this element:\n\n<li class=\"color selected\"></li>\n\nis being covered by another element:\n\n<input type=\"text\" id=\"board-size\" min=\"0\">\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying: cy.click() failed because this element:\n\n<li class=\"color selected\"></li>\n\nis being covered by another element:\n\n<input type=\"text\" id=\"board-size\" min=\"0\">\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at cypressErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32841/__cypress/runner/cypress_runner.js:149915:3)\n    at Object.retry (http://localhost:32841/__cypress/runner/cypress_runner.js:144197:19)\n    at retryActionability (http://localhost:32841/__cypress/runner/cypress_runner.js:132052:19)\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:32841/__cypress/runner/cypress_runner.js:164690:29)\n    at tryFn (http://localhost:32841/__cypress/runner/cypress_runner.js:144661:21)\n    at whenStable (http://localhost:32841/__cypress/runner/cypress_runner.js:144696:12)\n    at http://localhost:32841/__cypress/runner/cypress_runner.js:144240:16\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32841/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32841/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32841/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32841/__cypress/runner/cypress_runner.js:165532:18)\n    at Promise._fulfill (http://localhost:32841/__cypress/runner/cypress_runner.js:165477:18)",
                "diff": null
              },
              "uuid": "0b5da405-43ed-468d-8e19-b13ab0375e03",
              "parentUUID": "f71cc154-3df7-4a23-a413-d1cf80de899c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 4700,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: cy.click() failed because this element:\n\n<li class=\"color selected\"></li>\n\nis being covered by another element:\n\n<input type=\"text\" id=\"board-size\" min=\"0\">\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying: cy.click() failed because this element:\n\n<li class=\"color selected\"></li>\n\nis being covered by another element:\n\n<input type=\"text\" id=\"board-size\" min=\"0\">\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at cypressErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32841/__cypress/runner/cypress_runner.js:149915:3)\n    at Object.retry (http://localhost:32841/__cypress/runner/cypress_runner.js:144197:19)\n    at retryActionability (http://localhost:32841/__cypress/runner/cypress_runner.js:132052:19)\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:32841/__cypress/runner/cypress_runner.js:164690:29)\n    at tryFn (http://localhost:32841/__cypress/runner/cypress_runner.js:144661:21)\n    at whenStable (http://localhost:32841/__cypress/runner/cypress_runner.js:144696:12)\n    at http://localhost:32841/__cypress/runner/cypress_runner.js:144240:16\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32841/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32841/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32841/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32841/__cypress/runner/cypress_runner.js:165532:18)\n    at Promise._fulfill (http://localhost:32841/__cypress/runner/cypress_runner.js:165477:18)",
                "diff": null
              },
              "uuid": "8f1e9b95-7fe5-4d89-8766-20a32c207a74",
              "parentUUID": "f71cc154-3df7-4a23-a413-d1cf80de899c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5356f6e3-8a0b-41de-985a-a6f177242219"
          ],
          "failures": [
            "0b5da405-43ed-468d-8e19-b13ab0375e03",
            "8f1e9b95-7fe5-4d89-8766-20a32c207a74"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e503ca03-9aa9-47ab-a66b-b82c84b44af6",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 392,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "f3b97c91-9f48-4409-b302-da39b829363f",
              "parentUUID": "e503ca03-9aa9-47ab-a66b-b82c84b44af6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "d55bfa73-5eda-40e3-9447-6379dc6d2d3b",
              "parentUUID": "e503ca03-9aa9-47ab-a66b-b82c84b44af6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "22a17299-84f6-4419-add1-cf1b2dd9a60e",
              "parentUUID": "e503ca03-9aa9-47ab-a66b-b82c84b44af6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 4607,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: cy.click() failed because this element:\n\n<li class=\"color\" style=\"background-color: rgb(230, 141, 248);\"></li>\n\nis being covered by another element:\n\n<input type=\"text\" id=\"board-size\" min=\"0\">\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying: cy.click() failed because this element:\n\n<li class=\"color\" style=\"background-color: rgb(230, 141, 248);\"></li>\n\nis being covered by another element:\n\n<input type=\"text\" id=\"board-size\" min=\"0\">\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at cypressErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32841/__cypress/runner/cypress_runner.js:149915:3)\n    at Object.retry (http://localhost:32841/__cypress/runner/cypress_runner.js:144197:19)\n    at retryActionability (http://localhost:32841/__cypress/runner/cypress_runner.js:132052:19)\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:32841/__cypress/runner/cypress_runner.js:164690:29)\n    at tryFn (http://localhost:32841/__cypress/runner/cypress_runner.js:144661:21)\n    at whenStable (http://localhost:32841/__cypress/runner/cypress_runner.js:144696:12)\n    at http://localhost:32841/__cypress/runner/cypress_runner.js:144240:16\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32841/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32841/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32841/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32841/__cypress/runner/cypress_runner.js:165532:18)\n    at Promise._fulfill (http://localhost:32841/__cypress/runner/cypress_runner.js:165477:18)",
                "diff": null
              },
              "uuid": "5914ff78-0fa0-4a28-a428-e9a940621edf",
              "parentUUID": "e503ca03-9aa9-47ab-a66b-b82c84b44af6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3b97c91-9f48-4409-b302-da39b829363f",
            "d55bfa73-5eda-40e3-9447-6379dc6d2d3b",
            "22a17299-84f6-4419-add1-cf1b2dd9a60e"
          ],
          "failures": [
            "5914ff78-0fa0-4a28-a428-e9a940621edf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5382,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9e5414b2-846b-4cf9-bab1-954c0ecf28e5",
          "title": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "d25bd972-3a42-421c-9be0-7e0c3ffc217d",
              "parentUUID": "9e5414b2-846b-4cf9-bab1-954c0ecf28e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "b96000ee-25f5-48b6-ba47-71bdcd367e51",
              "parentUUID": "9e5414b2-846b-4cf9-bab1-954c0ecf28e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32841/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32841/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32841/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32841/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32841/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32841/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32841/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32841/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3b026c56-32fe-41a5-8262-a11a6559d06a",
              "parentUUID": "9e5414b2-846b-4cf9-bab1-954c0ecf28e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "25509cae-4e82-49f2-9ca5-133252eba9c2",
              "parentUUID": "9e5414b2-846b-4cf9-bab1-954c0ecf28e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "1e129d28-920e-48ba-84ab-8f87da1bb91a",
              "parentUUID": "9e5414b2-846b-4cf9-bab1-954c0ecf28e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "7a1c782d-ed72-4692-b74c-d71637e7203f",
              "parentUUID": "9e5414b2-846b-4cf9-bab1-954c0ecf28e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 646,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:32841/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:32841/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:32841/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:32841/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:32841/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:32841/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32841/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32841/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:32841/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32841/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e6bf7dec-2fa7-4276-acb3-daf9a351b5ff",
              "parentUUID": "9e5414b2-846b-4cf9-bab1-954c0ecf28e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 5112,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32841/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32841/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32841/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32841/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32841/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32841/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32841/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32841/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "32450447-8240-4bcb-88cd-f00fdf174d98",
              "parentUUID": "9e5414b2-846b-4cf9-bab1-954c0ecf28e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5166,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32841/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32841/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32841/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32841/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32841/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32841/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32841/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32841/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c205541d-8fde-4d6f-bacb-c7f648480d2f",
              "parentUUID": "9e5414b2-846b-4cf9-bab1-954c0ecf28e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d25bd972-3a42-421c-9be0-7e0c3ffc217d",
            "b96000ee-25f5-48b6-ba47-71bdcd367e51",
            "25509cae-4e82-49f2-9ca5-133252eba9c2",
            "1e129d28-920e-48ba-84ab-8f87da1bb91a",
            "7a1c782d-ed72-4692-b74c-d71637e7203f"
          ],
          "failures": [
            "3b026c56-32fe-41a5-8262-a11a6559d06a",
            "e6bf7dec-2fa7-4276-acb3-daf9a351b5ff",
            "32450447-8240-4bcb-88cd-f00fdf174d98",
            "c205541d-8fde-4d6f-bacb-c7f648480d2f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16659,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "61acce91-a3ac-4fe3-80d0-f882368827ae",
          "title": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5197,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32841/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32841/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32841/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32841/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32841/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32841/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32841/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32841/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "015325c8-b01d-4b76-8621-9e705b7a1a5b",
              "parentUUID": "61acce91-a3ac-4fe3-80d0-f882368827ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 718,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "b72fdd7c-51cd-4a14-acce-1bcb1ef67059",
              "parentUUID": "61acce91-a3ac-4fe3-80d0-f882368827ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4922,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32841/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32841/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32841/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32841/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32841/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32841/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32841/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32841/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32841/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32841/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32841/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7d3f15d9-5ec8-449d-8114-ba8f011b5180",
              "parentUUID": "61acce91-a3ac-4fe3-80d0-f882368827ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b72fdd7c-51cd-4a14-acce-1bcb1ef67059"
          ],
          "failures": [
            "015325c8-b01d-4b76-8621-9e705b7a1a5b",
            "7d3f15d9-5ec8-449d-8114-ba8f011b5180"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10837,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "64706154-cbc7-4e84-be80-edc85cb56d2a",
          "title": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 822,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "6eb7aaeb-222d-45b0-8d43-159e2ecae18e",
              "parentUUID": "64706154-cbc7-4e84-be80-edc85cb56d2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 704,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "5c2da301-3452-43c4-ad81-ada8a28dbbd6",
              "parentUUID": "64706154-cbc7-4e84-be80-edc85cb56d2a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6eb7aaeb-222d-45b0-8d43-159e2ecae18e",
            "5c2da301-3452-43c4-ad81-ada8a28dbbd6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1526,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}